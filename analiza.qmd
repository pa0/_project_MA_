---
title: "Meta-analysis"
---

```{r}
# tu właściwa analiza do włączenia do artykułu
library(tidyverse)
library(knitr)
library(metafor)
library()
library(conflicted)
conflict_prefer(dplyr::select, quiet = T)
conflict_prefer(dplyr::filter, quiet = T)


load("data/data.Rda")
#glimpse(data)
```

```{r}

```


```{r}
# ============================ Agregowane wartości ============================= #
data |> 
  mutate(
    waga = 1 / as.numeric(SE)^2,
    iloczyn = as.numeric(SMD) * waga) |> 
  group_by(lab) |>
    summarise(
      aSMD = sum(iloczyn)/ sum(waga),
      aSE = sqrt(1 / sum(waga))
      ) |> 
  select(lab, aSMD, aSE)

# Parametr korelacji między efektami w obrębie artykułu
rho <- 0.6  # założona korelacja (możesz przetestować kilka wartości)

# Funkcja pomocnicza do budowy bloku macierzy kowariancji dla jednego artykułu
make_block <- function(vi, rho) {
  m <- length(vi)
  mat <- matrix(rho, nrow = m, ncol = m)
  diag(mat) <- 1
  outer_sqrt <- outer(sqrt(vi), sqrt(vi))
  mat * outer_sqrt
}

# Budowa pełnej macierzy V (blokowo po artykułach)
V_list <- lapply(split(your_data, your_data$article_id), function(df) {
  make_block(df$vi, rho)
})
V_mat <- as.matrix(bdiag(V_list))  # macierz blokowa

# Model z macierzą kowariancji
model <- rma.mv(yi, V = V_mat, random = ~ 1 | article_id/effect_id, data = your_data)

# Komponenty wariancji
tau2_between <- model$sigma2[1]
tau2_within  <- model$sigma2[2]
mean_vi <- mean(your_data$vi)

# I²
I2_between <- tau2_between / (tau2_between + tau2_within + mean_vi)
I2_within  <- tau2_within  / (tau2_between + tau2_within + mean_vi)

cat("I² między artykułami: ", round(100 * I2_between, 2), "%\n")
cat("I² wewnątrz artykułów:", round(100 * I2_within, 2), "%\n")
```


```{r}
(met = metafor::rma(yi = abs(data$SMD_R), vi = data$SMD_var, slab = data$cite))  # SMD = 0.39, słaby związek
confint(met)
as.matrix(predict(met))

```

```{r}
metafor::radial(met)
```


```{r}
metafor::baujat(met)
```


```{r}
metafor::forest(met)
```


```{r}
metafor::funnel(met)
```


```{r}
metafor::regtest(met)
```


```{r}
metafor::ranktest(met) 
```

```{r}
print(influence(met)) |> 
  arrange(-dfbs)
```


```{r}
plot(influence(met))
```


