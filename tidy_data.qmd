---
title: "Analiza"
format: html
author: Agnieszka
---

```{r}
library(tidyverse)
```


```{r}
# wczytanie danych

data = readxl::read_xlsx('Meta 2.1.xlsx', sheet = 3)
data %>% head
```


```{r}
# usunięcie pustych kolumn

data = data %>%
  janitor::remove_constant(na.rm = TRUE)

#data[,-which(is.na(colnames(data)))] -> data  # usunięcie kolumny z pustą nazwą
```


```{r}
# zmiana nazw kolumn 

data %>% colnames
```


```{r}
data = data %>%
  janitor::clean_names()

names(data) = c('bibitem', 
                'first_author',
                'part',
                'year',
                'plan', 
                'group',
                'game_name',
                'game_type',
                'prosocial',
                'cooperative',
                'multiplayer',
                'compared_game_type',
                'effect_size',
                'effect_coef',
                'SMD_calc',
                'SMD',
                'v',
                'SE',
                'n',
                'test',
                'n_con',
                'm_con',
                'sd_con',
                'n_prosoc',
                'm_prosoc',
                'sd_prosoc',
                'measured_construct')


```


```{r}
# podgląd danych

View(data)
dplyr::glimpse(data)
skimr::skim(data)
summarytools::dfSummary(data) %>%
  summarytools::view(., footnote = '', custom.css = 'tiny_text.css', table.classes = 'tiny-text')
kableExtra::kable_styling(knitr::kable(data), font_size = 8)
```


```{r}
# transformacja danych # dane o artykułach (czyszczenie + dodanie ważnych kolumn)

data %>%
  distinct(bibitem)

data = data %>%
  mutate(id = 1:nrow(.),
         bibitem = if_else(!(str_sub(bibitem, 1, 2) %in% c('A.', 'B.')), bibitem, str_sub(bibitem, 4, -1L)),
         .before = 1) %>%
  fill(bibitem, .direction = 'down') %>%
  mutate(bibitem = if_else(is.na(str_locate(str_sub(bibitem, str_locate(bibitem, '[)]')[,1] + 3, -1L), '\\.|\\(')[,1]),
                           str_c(bibitem, '.'),
                           bibitem),
         bibitem = if_else(id == 26,
                           str_c(str_sub(bibitem, 1, 10), '(', year, '). ', str_sub(bibitem, 11, -1L)),
                           if_else(str_sub(bibitem, str_locate(bibitem, '[)]')[,1] + 1, str_locate(bibitem, '[)]')[,1] + 1) != '.',
                                   str_c(str_sub(bibitem, 1, str_locate(bibitem, '[)]')[,1]), '.', str_sub(bibitem, str_locate(bibitem, '[)]')[,1] + 1, -1L)),
                                   bibitem)),
         bibitem = if_else(str_sub(bibitem, str_locate(bibitem, '[)]')[,1] + 2, str_locate(bibitem, '[)]')[,1] + 2) != ' ',
                           str_c(str_sub(bibitem, 1, str_locate(bibitem, '[)]')[,1] + 1), ' ', str_sub(bibitem, str_locate(bibitem, '[)]')[,1] + 2, -1L)),
                           bibitem),
         bibitem = if_else(str_detect(str_sub(bibitem, 1, str_locate(bibitem, '[(]')[,1] - 1), ';') | !str_detect(str_sub(bibitem, 1, str_locate(bibitem, '[(]')[,1] - 1), '[.]'),
                           lapply(str_split(str_sub(bibitem, 1, str_locate(bibitem, '[(]')[,1] - 1), '; '),
                                  function(x) {name_joiner = function(y) {if (length(y) >= 3){
                                                                            name_joiner(c(str_c(y[1:2], collapse = '., '), y[3:length(y)]))
                                                                          } else if (length(y) == 2){
                                                                            name_joiner(str_c(y[1:2], collapse = '., & '))
                                                                          } else {
                                                                            y
                                                                          }};
                                               name_joiner(str_sub(x, 1, str_locate(x, ',')[,1] + 2)) %>%
                                                 str_c('. ')}) %>% unlist() %>%
                              str_c(str_sub(bibitem, str_locate(bibitem, '[(]')[,1], -1L)),
                           bibitem),
         title = str_sub(bibitem,
                         str_locate(bibitem, '[)]')[,1] + 3,
                         str_locate(bibitem, '[)]')[,1] + 2 + str_locate(str_sub(bibitem, str_locate(bibitem, '[)]')[,1] + 3, -1L), '\\.|\\(')[,1] - 1),
         title = if_else(title != 'D7',
                         title,
                         str_sub(bibitem,
                                 str_locate(bibitem, '-')[,1] + 1,
                                 str_locate(bibitem, '-')[,1] + str_locate(str_sub(bibitem, str_locate(bibitem, '-')[,1] + 1, -1L), '\\.|\\(')[,1] - 1)),
         .after = 'year') %>%
  relocate(c(bibitem, part), .after = title) %>%
  mutate(cite = str_sub(bibitem, 1, str_locate(bibitem, ',')[,1] - 1) %>%
                  str_c(year,
                        if_else(!(str_split(title, ' ') %>% lapply(`[`, 1) %in% c('A', 'An', 'The')),
                                str_split(title, ' ') %>% lapply(`[`, 1),
                                str_split(title, ' ') %>% lapply(`[`, 2)) %>%
                          str_remove_all('[^[:alnum:]]'),
                        '_',
                        part) %>%
                  str_to_lower() %>%
                  str_replace_all(' ', '_') %>%
                  str_remove_all("’"),
         .after = id) %>%
  mutate(first_author = str_remove_all(first_author, ' et al.| el at.'),
         first_author = if_else(!str_detect(first_author, ','),
                                first_author,
                                str_sub(first_author, 1, str_locate(first_author, ',')[,1] - 1))) %>%
  mutate_at(vars(c(first_author, title)), str_to_title)

data |> head()
```


```{r}
# transformacja danych # zmiana typów zmiennych ilościowych

data = data %>%
  mutate_at(vars(c(year,
                   prosocial,
                   cooperative,
                   multiplayer,
                   starts_with('n'))), as.integer) %>%
  mutate(SMD = as.numeric(SMD)) %>%
  relocate(effect_coef, .before = 'effect_size')


data = data %>%
  mutate(sd_prosoc = str_replace(sd_prosoc, '=,', '=0,')) %>% 
  mutate_at(vars(starts_with('sd_')), ~str_remove_all(.x, '95%ci=')) %>%
  mutate_at(vars(matches('^sd_|^m_')), ~as.numeric(str_replace_all(.x, ',', '.')))
```


```{r}
# transformacja danych # etykietowanie zmiennych jakościowych

data = data %>%
  mutate(plan = factor(if_else(plan == 'eksperyment', 'E', 'C')),
         game_type = factor(if_else(game_type == 'video', 'V', 'O')),
         compared_game_type = case_when(compared_game_type == 'competitve' ~ 'competitive',
                                        compared_game_type == 'cooperetive' ~ 'cooperative',
                                        TRUE ~ compared_game_type)) %>%
  relocate(measured_construct, .before = game_name)

data = data %>% 
  mutate(group = str_remove_all(group, '[(]|[)]|lat|[+]| imigranci') %>%
                 str_replace_all(c('  ' = ' ',
                                   'młodzeż' = 'młodzież',
                                   'przedszkolaki' = 'dzieci',
                                   '^18-42' = 'dorośli 18-42',
                                   '6-8, 8-10, 10-12, 12-14' = '6-14')) %>%
                 str_trim('right')) %>%
  separate(col = 'group',                                   
           into = c('group', 'age_bounds'),                  
           sep = ' ') %>%
  separate(col = 'age_bounds',                                   
           into = c('age_lower_bound', 'age_upper_bound'),                  
           sep = '-',
           convert = TRUE) %>%
  mutate(group = case_when(group == 'dzieci' ~ 'C',         # childrens
                           group == 'młodzież' ~ 'Y',       # youth
                           group == 'studenci' ~ 'S',       # students
                           group == 'dorośli' ~ 'A') %>%    # adults
                  factor(levels = c('C', 'Y', 'S', 'A')))
```


```{r}
# transformacja danych # czyszczenie testów statystycznych

data = data %>% 
  mutate(test = na_if(test, 's') %>%
                  str_to_lower() %>%
                  str_remove_all('\\[|\\]') %>%
                  str_replace_all(
                           c('[.]' = ',',
                             ';' = ',',
                             'chi2' = 'chi',
                             ' [(]' = '(',
                             '\n' = ' ',
                             ' +' = ' ',
                             ' ,' = ',',
                             '= ' = '=',
                             ' =' = '=',
                             '> ' = '>',
                             ' >' = '>',
                             '< ' = '<',
                             ' <' = '<',
                             '[(](\\d+),(\\d+)[)]' = '(\\1;\\2)',
                             '[(](\\d+),\\s(\\d+)[)]' = '(\\1;\\2)',
                             ', n=' = ';',
                             '95%ci=' = 'ci95%_low=',
                             ',,' = ', ci95%_up=0,',
                             ', ' = ' ',
                             '=,' = '=0,',
                             '<,' = '<0,',
                             '>,' = '>0,',
                             '-,' = '-0,',
                             ',' = '.',
                             ';' = ',',
                             'se=(\\d+),(\\d+)  p<(\\d+),(\\d+)' = 'p<(\\d+),(\\d+) se=(\\d+),(\\d+)')) %>%
                  str_trim())
```


```{r}
# podgląd danych

View(data)
dplyr::glimpse(data)
skimr::skim(data)
summarytools::dfSummary(data) %>%
  summarytools::view(., footnote = '', custom.css = 'tiny_text.css', table.classes = 'tiny-text')
kableExtra::kable_styling(knitr::kable(data), font_size = 8)
```


```{r}
# transformacja danych # rozwinięcie testów statystycznych (do dalszej obróbki)

#data$test %>% str_split(' ')

data = data %>%
  mutate(test_list = 
          lapply(lapply(test, function(x) {y = str_split(x, ' ');
          y = structure(y[[1]], names = c(sapply(y[[1]], function(z)
            case_when(str_sub(z,1,2) %in% c('p=', 'p<', 'p>') ~ 'p',
                      str_sub(z,1,2) %in% c('z=', 't(', 't=', 'f(', 'f=', 'ch') | str_sub(z,1,9) == 'ci95%_low' ~ 'stat',
                      str_sub(z,1,8) == 'ci95%_up' ~ 'stat_2',
                      str_sub(z,1,2) %in% c('se', 'sd') ~ 'se',
                      str_sub(z,1,2) == 'd=' ~ 'd',
                      TRUE ~ 'o'))));
          y}),
          function(w) w[order(factor(names(w), levels = c('p', 'stat', 'stat_2', 'se', 'd', 'o')))])) %>%
  unnest_wider(test_list, names_sep = '.', names_repair = 'universal') %>% 
  rename(test_list.d = test_list.d...38) %>% select(-test_list.d...39) %>%      # linijka do ostatniej obserwacji do pozbycia w przyszłości
  relocate(str_c('test_list.', c('p', 'stat', 'stat_2', 'se', 'd', 'o')), .after = 'test')
```


```{r}
# robocze:
data %>%
  mutate(test_list = 
           lapply(lapply(data$test, function(x) {y = str_split(x, ' ');
           y = structure(y[[1]], names = c(sapply(y[[1]], function(z)
             if_else(str_sub(z,1,2) %in% c('p=', 'p<', 'p>', 'z=', 't(', 't=', 'f(', 'f=', 'ch', 'ci', 'se', 'sd', 'd='), str_sub(z,1,1), 'o'))));
           y}),
           function(w) w[order(factor(names(w), levels =  c('p', 'z', 't', 'f', 'c', 's', 'd', 'o')))])) 


```

```{r}
# zapisanie zbioru binarnie do dalszej pracy
save(data, file = "./data.rds")
```

